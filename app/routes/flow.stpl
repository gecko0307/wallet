<html lang="ru">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <meta name="Description" content="Wallet"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="shortcut icon" href="favicon.gif" type="image/x-icon"/>
        <title>Wallet - Report</title>
        <link rel="stylesheet" href="Chart.min.css">
        <link rel="stylesheet" href="style.css">
    </head>
    <body>
        <div class="header">
            <p><a href="/">← К списку счетов</a><p>
        </div>
        <div class="content">
        <h1>Денежный поток</h1>
        <h4 style="text-align:center; margin-top:5px; margin-bottom:0; font-weight: bold;">
            <a href="/flow?year={{data.year-1}}">←</a> {{ data.year }} <a href="/flow?year={{data.year+1}}">→</a>
        </h4>
        <div id="report">
            <canvas id="myChart"></canvas>
        </div>
        <br>
        <p>
        За год: 
        <span id="AnnualRevenue" style="color:#004ecc">+</span>
        <span id="AnnualExpence" style="color:#e24444">-</span>
        <span id="AnnualNet" style="color:#379683">=</span>
        </p>
        <p>
        В среднем за месяц: 
        <span id="AverageMonthlyRevenue" style="color:#004ecc">+</span>
        <span id="AverageMonthlyExpence" style="color:#e24444">-</span>
        <span id="AverageMonthlyNet" style="color:#379683">=</span>
        </p>
        <p>
        Прогноз на текущий год: 
        <span id="EstimatedAnnualRevenue" style="color:#004ecc">+</span>
        <span id="EstimatedAnnualExpence" style="color:#e24444">-</span>
        <span id="EstimatedAnnualNet" style="color:#379683">=</span>
        </p>
        </div>
        
        <script src="Chart.bundle.min.js"></script>
        <script src="frontendutils.js"></script>
        <script>
var ctx = document.getElementById("myChart").getContext("2d");

loadJSON("/flow.json?year={{data.year}}", function(json) {
    var data = JSON.parse(json);
    
    var annualRevenue = data.annualRevenue;
    var annualExpence = data.annualExpence;
    var annualNet = data.annualNet;
    
    var annualExpencePercentage = annualExpence / (annualRevenue / 100);
    var annualNetPercentage = annualNet / (annualRevenue / 100);
    
    var monthlyRevenue = data.monthlyRevenue;
    var monthlyExpence = data.monthlyExpence;
    var monthlyNet = data.monthlyNet;
    
    var estimatedAnnualRevenue = data.estimatedAnnualRevenue;
    var estimatedAnnualExpence = data.estimatedAnnualExpence;
    var estimatedAnnualNet = data.estimatedAnnualNet;
    
    document.getElementById("AnnualRevenue").innerHTML += money(annualRevenue, "RUB");
    document.getElementById("AnnualExpence").innerHTML += money(annualExpence, "RUB") + " (" + annualExpencePercentage.toFixed(2) + "%)";
    document.getElementById("AnnualNet").innerHTML += money(annualNet, "RUB") + " (" + annualNetPercentage.toFixed(2) + "%)";
    
    document.getElementById("AverageMonthlyRevenue").innerHTML += money(monthlyRevenue, "RUB");
    document.getElementById("AverageMonthlyExpence").innerHTML += money(monthlyExpence, "RUB");
    document.getElementById("AverageMonthlyNet").innerHTML += money(monthlyNet, "RUB");
    
    document.getElementById("EstimatedAnnualRevenue").innerHTML += money(estimatedAnnualRevenue, "RUB");
    document.getElementById("EstimatedAnnualExpence").innerHTML += money(estimatedAnnualExpence, "RUB");
    document.getElementById("EstimatedAnnualNet").innerHTML += money(estimatedAnnualNet, "RUB");
    
    var flowData = {
        labels: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
        datasets: [
            {
                data: data.revenue,
                label: "Доходы",
                backgroundColor: 'rgba(0, 78, 204, 0.4)'
            },
            {
                data: data.expense,
                label: "Расходы",
                backgroundColor: 'rgba(255, 0, 0, 0.4)'
            },
            {
                data: data.net,
                label: "Чистая прибыль",
                backgroundColor: 'rgba(58, 183, 0, 0.4)'
            }
        ]
    };
    
    var barChart = new Chart(ctx, {
        type: "bar",
        data: flowData,
        options: {
            tooltips: {
                callbacks: {
                    label: function(tooltipItem, data) {
                        var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                        var type = data.datasets[tooltipItem.datasetIndex].label;
                        var m = money(value, "RUB");
                        var signs = ["+", "-", "="];
                        return " " + signs[tooltipItem.datasetIndex] + m;
                    }
                }
            },
            onClick: function(event, array) {
                var activeElement = barChart.getElementAtEvent(event);
                var month = activeElement[0]._index;
                var dataset = activeElement[0]._datasetIndex;
                if (dataset == 0) {
                    var url = "/monthrevenue?year={{data.year}}&month=" + month;
                    console.log(url);
                    window.location.replace(url);
                }
                else if (dataset == 1) {
                    var url = "/monthexpences?year={{data.year}}&month=" + month;
                    console.log(url);
                    window.location.replace(url);
                }
            },
            hover: {
                onHover: function(event) {
                    var activeElement = barChart.getElementAtEvent(event);
                    if (activeElement.length) {
                        var dataset = activeElement[0]._datasetIndex;
                        if (dataset == 0 || dataset == 1)
                            event.target.style.cursor = "pointer";
                        else
                            event.target.style.cursor = "default";
                    }
                    else
                        event.target.style.cursor = "default";
                }
            },
            plugins: {
                legend: {
                    labels: {
                        font: {
                            family: "sans-serif"
                        }
                    }
                }
            }
        }
    });

});
        </script>
    </body>
</html>